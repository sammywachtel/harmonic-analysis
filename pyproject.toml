[build-system]
requires = [
    "hatchling",
    "setuptools>=80",
]
build-backend = "hatchling.build"

[project]
name = "harmonic-analysis"
dynamic = [
    "version",
]
description = "Comprehensive harmonic and modal analysis engine for music theory"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10,<3.14"
authors = [
    { name = "Sam Wachtel", email = "sammywachtel@gmail.com" },
]
keywords = [
    "music",
    "theory",
    "analysis",
    "harmony",
    "modal",
    "chords",
    "scales",
    "functional-harmony",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Education",
]
dependencies = [
    "typing-extensions>=4.0.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
]

[project.optional-dependencies]
api = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.0.0",
]
music21 = [
    "music21>=9.1.0",
]
educational = [
    # Educational features (currently no external dependencies needed)
]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio>=0.21",
    "black",
    "flake8",
    "mypy",
    "pre-commit",
    "httpx>=0.25.0",  # For testing FastAPI endpoints
    "music21>=9.1.0",  # For music21 integration tests
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-xdist",
    "pytest-asyncio>=0.21",
    "httpx>=0.25.0",  # For testing FastAPI endpoints
    "music21>=9.1.0",  # For file upload tests
]

[project.urls]
Homepage = "https://github.com/sammywachtel/harmonic-analysis"
Repository = "https://github.com/sammywachtel/harmonic-analysis"
Issues = "https://github.com/sammywachtel/harmonic-analysis/issues"

[tool.hatch.version]
path = "src/harmonic_analysis/__init__.py"

[tool.hatch.build.targets.wheel]
packages = [
    "src/harmonic_analysis",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = "-ra -q --strict-markers --strict-config --cov=harmonic_analysis --cov-report=html --cov-report=term-missing"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "functional: Functional tests",
    "modal: Modal analysis tests",
    "chromatic: Chromatic analysis tests",
    "asyncio: Mark a test as an asyncio test",
    "regression: Regression tests to ensure existing functionality unchanged",
    "educational: marks tests requiring educational extra (skip if not installed)",
]

[tool.black]
line-length = 88
target-version = [
    "py311",
]
include = "\\.pyi?$"
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
known_first_party = [
    "app",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "supabase",
    "supabase.client",
    "postgrest",
    "gotrue",
    "fastapi",
    "fastapi.middleware.cors",
    "pydantic",
    "uvicorn",
    "music21",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "harmonic_analysis.rest_api.models",
    "harmonic_analysis.rest_api.routes",
]
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "harmonic_analysis.integrations.music21_adapter"
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = "harmonic_analysis.educational.__init__"
disallow_untyped_defs = false

[tool.coverage.run]
source = [
    "app",
]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
