[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "harmonic-analysis"
dynamic = ["version"]
description = "Comprehensive harmonic and modal analysis engine for music theory"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    { name = "Sam Wachtel", email = "sammywachtel@gmail.com" },
]
keywords = [
    "music",
    "theory",
    "analysis",
    "harmony",
    "modal",
    "chords",
    "scales",
    "functional-harmony",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Education",
]
dependencies = [
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio>=0.21",
    "black",
    "flake8",
    "mypy",
    "pre-commit",
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-xdist",
    "pytest-asyncio>=0.21",
]

[project.urls]
Homepage = "https://github.com/sammywachtel/harmonic-analysis"
Repository = "https://github.com/sammywachtel/harmonic-analysis"
Issues = "https://github.com/sammywachtel/harmonic-analysis/issues"

[tool.hatch.version]
path = "src/harmonic_analysis/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/harmonic_analysis"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=harmonic_analysis",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "functional: Functional tests",
    "modal: Modal analysis tests",
    "chromatic: Chromatic analysis tests",
    "slow: Slow running tests",
    "asyncio: Mark a test as an asyncio test",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    "htmlcov",
]
per-file-ignores = [
    "tests/*: E501",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
